name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: debian:12
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y git python${{ matrix.python-version }} python${{ matrix.python-version }}-pip python${{ matrix.python-version }}-venv python3-dev build-essential

    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      run: |
        python${{ matrix.python-version }} -m pip install --upgrade pip
        python${{ matrix.python-version }} -m pip install --upgrade setuptools wheel

    - name: Install dependencies
      run: |
        python${{ matrix.python-version }} -m pip install -e ".[dev]"
        python${{ matrix.python-version }} -m pip install coverage pytest-cov

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        python${{ matrix.python-version }} -m flake8 learnrl/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        python${{ matrix.python-version }} -m flake8 learnrl/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Type check with mypy
      run: |
        python${{ matrix.python-version }} -m mypy learnrl/

    - name: Test with pytest and generate coverage
      run: |
        python${{ matrix.python-version }} -m pytest --cov=learnrl --cov-report=xml --cov-report=html --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive coverage reports
      if: matrix.python-version == '3.10'
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/

  test-with-gymnasium:
    runs-on: ubuntu-latest
    container:
      image: debian:12
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y git python${{ matrix.python-version }} python${{ matrix.python-version }}-pip python${{ matrix.python-version }}-venv python3-dev build-essential

    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      run: |
        python${{ matrix.python-version }} -m pip install --upgrade pip
        python${{ matrix.python-version }} -m pip install --upgrade setuptools wheel

    - name: Install dependencies with Gymnasium
      run: |
        python${{ matrix.python-version }} -m pip install -e ".[dev,gym]"
        python${{ matrix.python-version }} -m pip install coverage pytest-cov

    - name: Test Gymnasium integration
      run: |
        python${{ matrix.python-version }} -m pytest tests/ -k "gymnasium" -v --cov=learnrl --cov-append

    - name: Test Monte Carlo examples with Gymnasium
      run: |
        python${{ matrix.python-version }} examples/monte_carlo_cartpole.py --episodes 10

  code-quality:
    runs-on: ubuntu-latest
    container:
      image: debian:12
    steps:
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y git python3.10 python3.10-pip python3.10-venv python3-dev build-essential

    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      run: |
        python3.10 -m pip install --upgrade pip
        python3.10 -m pip install --upgrade setuptools wheel

    - name: Install dependencies
      run: |
        python3.10 -m pip install -e ".[dev]"

    - name: Check code formatting with Black
      run: |
        python3.10 -m black --check learnrl/

    - name: Comprehensive linting with flake8
      run: |
        python3.10 -m flake8 learnrl/ --max-line-length=88 --extend-ignore=E203,W503

    - name: Type checking with mypy
      run: |
        python3.10 -m mypy learnrl/ --strict

  security:
    runs-on: ubuntu-latest
    container:
      image: debian:12
    steps:
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y git python3.10 python3.10-pip python3.10-venv python3-dev build-essential

    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      run: |
        python3.10 -m pip install --upgrade pip
        python3.10 -m pip install --upgrade setuptools wheel

    - name: Install dependencies
      run: |
        python3.10 -m pip install -e ".[dev]"
        python3.10 -m pip install bandit safety

    - name: Security check with bandit
      run: |
        python3.10 -m bandit -r learnrl/ -f json -o bandit-report.json || true

    - name: Check dependencies with safety
      run: |
        python3.10 -m safety check --json --output safety-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json